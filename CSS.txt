CSS (Cascading Style Sheets) is a stylesheet language used to describe the presentation and visual formatting of HTML documents. CSS controls how elements are displayed on screen, in print, or in other media. The "cascading" nature means styles can be inherited and overridden in a hierarchical manner based on specificity and source order. CSS separates content from presentation, allowing developers to maintain consistent styling across multiple pages. Modern CSS includes powerful features like flexbox, grid layouts, animations, transitions, and responsive design capabilities. CSS works by selecting HTML elements and applying style rules that define properties like colors, fonts, spacing, positioning, and layout behavior.
===========================================================================

BASIC CSS STRUCTURE
===================
selector {property: value;}                     Basic CSS syntax - selects elements and applies styles

CSS IMPLEMENTATION
==================
<style> h1 { color: blue; } </style>            Internal CSS embedded in HTML head section
<link rel="stylesheet" href="style.css">        External CSS file - best practice for maintainability
<h1 style="color: red;">Text</h1>               Inline CSS - highest specificity but hard to maintain

SELECTORS
=========
h1                                              Type selector - targets all h1 elements
.class-name                                     Class selector - targets elements with matching class
#unique-id                                      ID selector - targets single element with specific ID
*                                               Universal selector - applies to all elements
h1, h2, p                                       Group selector - comma-separated multiple targets
div p                                           Descendant selector - p anywhere inside div
div > p                                         Child selector - direct p children of div only
h1 + p                                          Adjacent sibling - p immediately following h1
a:hover                                         Pseudo-class - element state (hover, focus, active)
p::first-line                                   Pseudo-element - specific part of element content

COLORS
======
color: red;                                     Named color - 147 predefined color names
color: # ff0000;                                Hexadecimal color - # RRGGBB format (0-F values)
color: RGB(255, 0, 0);                          RGB color function - red, green, blue (0-255)
color: RGBA(255, 0, 0, 0.5);                    RGBA with alpha transparency (0-1 opacity)
background-color: blue;                         Background color of element content area
background-color: transparent;                  Completely transparent background (default)

TEXT PROPERTIES
===============
font-family: Arial, sans-serif;                 Font stack with fallbacks for cross-platform compatibility
font-size: 16px;                                Absolute font size in pixels (most common unit)
font-size: 1.2em;                               Relative to parent element's font size
font-size: 120%;                                Percentage relative to parent font size
font-weight: bold;                              Font thickness - normal, bold, or 100-900 numeric
font-style: italic;                             Font style - normal, italic, or oblique
text-align: center;                             Horizontal text alignment within container
text-decoration: underline;                     Text decoration lines (none, underline, line-through)
text-transform: uppercase;                      Text case transformation for display
line-height: 1.5;                               Vertical spacing between text lines (readability)
letter-spacing: 2px;                            Horizontal spacing between individual characters

BACKGROUNDS
===========
background-color: # f0f0f0;                     Background color
background-image: url('image.jpg');             Background image
background-repeat: no-repeat;                   Image repetition (repeat, no-repeat, repeat-x, repeat-y)
background-position: center;                    Image position (top, center, bottom, left, right)
background-size: cover;                         Image sizing (cover, contain, 100px, 50%)
background: url('img.jpg') no-repeat center;    Shorthand background property

BOX MODEL
=========
width: 200px;                                   Element content area width (excluding padding/border)
height: 100px;                                  Element content area height (excluding padding/border)
max-width: 500px;                               Maximum width constraint for responsive design
min-height: 50px;                               Minimum height to prevent content overflow
padding: 10px;                                  Inner spacing between content and border (all sides)
padding: 10px 20px;                             Vertical 10px, horizontal 20px padding
padding: 10px 15px 5px 20px;                    Clockwise: top, right, bottom, left padding
margin: 10px;                                   Outer spacing outside border (all sides)
margin: 0 auto;                                 Zero top/bottom, auto left/right (centers block elements)
border: 2px solid black;                        Border shorthand: width style color
border-radius: 10px;                            Rounded corners with 10px radius curve
box-sizing: border-box;                         Width includes padding and border (modern standard)

BORDERS
=======
border-width: 2px;                              Border thickness
border-style: solid;                            Border style (solid, dashed, dotted, none)
border-color: red;                              Border color
border-top: 1px solid # ccc;                    Top border only
border-radius: 5px;                             Rounded corners
border-radius: 10px 20px;                       Different corner radii

POSITIONING
===========
position: static;                               Default positioning
position: relative;                             Relative to normal position
position: absolute;                             Relative to positioned parent
position: fixed;                                Relative to viewport
position: sticky;                               Sticky positioning
top: 10px;                                      Distance from top
left: 20px;                                     Distance from left
right: 15px;                                    Distance from right
bottom: 5px;                                    Distance from bottom
z-index: 10;                                    Stacking order (higher = front)

DISPLAY & VISIBILITY
====================
display: block;                                 Block element (full width)
display: inline;                                Inline element (content width)
display: inline-block;                          Inline but with width/height
display: none;                                  Hide element completely
display: flex;                                  Flexbox container
display: grid;                                  Grid container
visibility: hidden;                             Hide but keep space
visibility: visible;                            Show element
opacity: 0.5;                                   Transparency (0-1)

FLEXBOX
=======
display: flex;                                  Create flex container
flex-direction: row;                            Flex direction (row, column, row-reverse, column-reverse)
justify-content: center;                        Horizontal alignment (flex-start, center, flex-end, space-between, space-around)
align-items: center;                            Vertical alignment (flex-start, center, flex-end, stretch, baseline)
flex-wrap: wrap;                                Allow items to wrap
flex: 1;                                        Flex item growth
gap: 10px;                                      Space between flex items

GRID
====
display: grid;                                  Create grid container
grid-template-columns: 1fr 2fr 1fr;             Define column sizes
grid-template-rows: 100px auto;                 Define row sizes
grid-gap: 10px;                                 Gap between grid items
grid-column: span 2;                            Item spans 2 columns
grid-row: span 3;                               Item spans 3 rows

RESPONSIVE DESIGN
=================
@media (max-width: 768px) {                     Media query for mobile
    .class { font-size: 14px; }
}
@media (min-width: 1024px) {                    Media query for desktop
    .class { font-size: 18px; }
}
width: 100%;                                    Responsive width
max-width: 100%;                                Prevent overflow
img { max-width: 100%; height: auto; }          Responsive images

TRANSITIONS & ANIMATIONS
=========================
transition: all 0.3s ease;                      Smooth transition
transition: color 0.5s, font-size 0.2s;         Specific property transitions
transform: scale(1.1);                          Scale element
transform: rotate(45deg);                       Rotate element
transform: translate(10px, 20px);               Move element
:hover { color: red; }                          Hover effect

@keyframes slideIn {                            Define animation
    from { left: -100%; }
    to { left: 0; }
}
animation: slideIn 1s ease-in-out;              Apply animation

COMMON UNITS
============
px                                              Pixels (absolute)
%                                               Percentage (relative to parent)
em                                              Relative to element's font size
rem                                             Relative to root font size
vh                                              Viewport height (1vh = 1% of viewport height)
vw                                              Viewport width (1vw = 1% of viewport width)

LISTS
=====
list-style-type: none;                          Remove bullet points
list-style-type: disc;                          Bullet points (default)
list-style-type: decimal;                       Numbers
list-style-position: inside;                    Bullet position
list-style-image: url('bullet.png');            Custom bullet image

TABLES
======
border-collapse: collapse;                      Remove space between borders
border-spacing: 5px;                            Space between table cells
caption-side: top;                              Table caption position
table-layout: fixed;                            Fixed table layout
empty-cells: hide;                              Hide empty cells

OVERFLOW
========
overflow: visible;                              Content can overflow (default)
overflow: hidden;                               Hide overflowing content
overflow: scroll;                               Always show scrollbars
overflow: auto;                                 Show scrollbars when needed
text-overflow: ellipsis;                        Show ... for overflowing text
white-space: nowrap;                            Prevent text wrapping

COMMENTS
========
/* This is a CSS comment */                     Comments are ignored by browser

CSS RESET/NORMALIZE
===================
* {                                             Universal reset
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}       