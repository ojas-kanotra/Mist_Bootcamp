JavaScript (JS) is a versatile, high-level programming language that brings interactivity and dynamic behavior to webpages. Unlike HTML, which structures content, or CSS, which styles it, JavaScript enables webpages to respond to user actions, manipulate content in real time, handle data, and communicate with servers. It powers animations, form validations, interactive maps, and complex web applications, making the web responsive and engaging. As a cornerstone of modern web development, JavaScript works seamlessly with HTML and CSS, forming a complete trio that allows developers to create rich, functional, and interactive user experiences across browsers and devices.
=========================

BASIC JAVASCRIPT STRUCTURE
=========================
<script>                                        JavaScript code container (in HTML)
</script>
<script src="script.js"></script>               Link to external JavaScript file
console.log("Hello World");                     Display message in browser console
alert("Hello World");                           Show popup message to user
document.write("Hello World");                  Write directly to HTML document

VARIABLES
=========
var name = "John";                              Variable declaration (old way)
let age = 25;                                   Block-scoped variable (modern)
const PI = 3.14;                                Constant value (cannot change)
let x, y, z;                                    Multiple variable declaration
let firstName = "John", lastName = "Doe";       Multiple variables with values
typeof variable;                                Check data type of variable

DATA TYPES
==========
let text = "Hello";                             String data type
let number = 42;                                Number data type
let decimal = 3.14;                             Decimal number
let isTrue = true;                              Boolean true
let isFalse = false;                            Boolean false
let nothing = null;                             Null value
let notDefined;                                 Undefined variable
let arr = [1, 2, 3];                            Array data type
let obj = {name: "John", age: 30};              Object data type

OPERATORS
=========
let sum = 5 + 3;                                Addition operator
let diff = 10 - 4;                              Subtraction operator
let product = 6 * 7;                            Multiplication operator
let quotient = 15 / 3;                          Division operator
let remainder = 17 % 5;                         Modulus (remainder) operator
x++;                                            Increment by 1
x--;                                            Decrement by 1
x += 5;                                         Add and assign
x -= 3;                                         Subtract and assign
x *= 2;                                         Multiply and assign
x /= 4;                                         Divide and assign

COMPARISON OPERATORS
====================
x == y;                                         Equal to (loose comparison)
x === y;                                        Strict equal (same type and value)
x != y;                                         Not equal to
x !== y;                                        Strict not equal
x > y;                                          Greater than
x < y;                                          Less than
x >= y;                                         Greater than or equal
x <= y;                                         Less than or equal

LOGICAL OPERATORS
=================
x && y;                                         Logical AND (both true)
x || y;                                         Logical OR (either true)
!x;                                             Logical NOT (opposite)
x ? y : z;                                      Ternary operator (if x then y else z)

STRINGS
=======
let str = "Hello World";                        String literal
let str2 = 'Single quotes';                     String with single quotes
let str3 = `Template literal ${variable}`;      Template literal with variables
str.length;                                     Get string length
str.toUpperCase();                              Convert to uppercase
str.toLowerCase();                              Convert to lowercase
str.charAt(0);                                  Get character at position
str.indexOf("World");                           Find position of substring
str.slice(0, 5);                                Extract part of string
str.replace("Hello", "Hi");                     Replace text in string
str.split(" ");                                 Split string into array

ARRAYS
======
let arr = [1, 2, 3, 4, 5];                      Array creation
let fruits = ["apple", "banana", "orange"];     String array
arr[0];                                         Access first element (index 0)
arr.length;                                     Get array length
arr.push(6);                                    Add element to end
arr.pop();                                      Remove last element
arr.unshift(0);                                 Add element to beginning
arr.shift();                                    Remove first element
arr.indexOf(3);                                 Find index of element
arr.includes(5);                                Check if element exists
arr.join(", ");                                 Convert array to string
arr.slice(1, 3);                                Extract portion of array
arr.splice(1, 2);                               Remove elements from array

OBJECTS
=======
let person = {name: "John", age: 30};           Object creation
person.name;                                    Access property (dot notation)
person["age"];                                  Access property (bracket notation)
person.city = "New York";                       Add new property
delete person.age;                              Delete property
Object.keys(person);                            Get all property names
Object.values(person);                          Get all property values
Object.entries(person);                         Get key-value pairs

FUNCTIONS
=========
function greet() { return "Hello"; }            Function declaration
function add(a, b) { return a + b; }            Function with parameters
let multiply = function(x, y) { return x * y; } Function expression
let divide = (a, b) => a / b;                   Arrow function (short)
let square = x => x * x;                        Arrow function (single parameter)
greet();                                        Call function
add(5, 3);                                      Call function with arguments
function.name;                                  Get function name
function.length;                                Get number of parameters

CONDITIONAL STATEMENTS
======================
if (condition) { /* code */ }                   Basic if statement
if (x > 5) { console.log("Greater"); }          If with condition
if (x > 5) { /* true */ } else { /* false */ }  If-else statement
if (x > 10) { } else if (x > 5) { } else { }    Multiple conditions
switch (variable) { case 1: break; default: }   Switch statement
condition ? value1 : value2;                    Ternary conditional operator

LOOPS
=====
for (let i = 0; i < 5; i++) { /* code */ }      For loop
for (let item of array) { /* code */ }          For-of loop (arrays)
for (let key in object) { /* code */ }          For-in loop (objects)
while (condition) { /* code */ }                While loop
do { /* code */ } while (condition);            Do-while loop
break;                                          Exit loop
continue;                                       Skip to next iteration

DOM MANIPULATION
================
document.getElementById("myId");                Get element by ID
document.getElementsByClassName("myClass");     Get elements by class name
document.getElementsByTagName("div");           Get elements by tag name
document.querySelector(".myClass");             Get first element matching CSS selector
document.querySelectorAll("div");               Get all elements matching selector
element.innerHTML = "New content";              Change HTML content
element.textContent = "New text";               Change text content only
element.setAttribute("class", "newClass");      Set attribute
element.getAttribute("class");                  Get attribute value
element.style.color = "red";                    Change CSS style
element.classList.add("newClass");              Add CSS class
element.classList.remove("oldClass");           Remove CSS class

EVENTS
======
element.onclick = function() { /* code */ };    Click event (old way)
element.addEventListener("click", function() {})Add event listener (modern)
element.removeEventListener("click", handler);  Remove event listener
window.onload = function() { /* code */ };      Page load event
document.onready = function() { /* code */ };   Document ready event
event.preventDefault();                         Prevent default behavior
event.stopPropagation();                        Stop event bubbling
event.target;                                   Element that triggered event

ERROR HANDLING
==============
try { /* risky code */ } catch (error) { }      Try-catch block
throw new Error("Custom error message");        Throw custom error
finally { /* always runs */ }                   Finally block (always executes)
console.error("Error message");                 Log error to console

TIMING FUNCTIONS
================
setTimeout(function, 2000);                     Execute function after delay (ms)
setInterval(function, 1000);                    Execute function repeatedly
clearTimeout(timeoutId);                        Cancel setTimeout
clearInterval(intervalId);                      Cancel setInterval

JSON
====
JSON.stringify(object);                         Convert object to JSON string
JSON.parse(jsonString);                         Convert JSON string to object
fetch('url').then(response => response.json())  Fetch JSON data from API

LOCAL STORAGE
=============
localStorage.setItem("key", "value");           Store data in browser
localStorage.getItem("key");                    Retrieve stored data
localStorage.removeItem("key");                 Remove specific item
localStorage.clear();                           Clear all stored data
sessionStorage.setItem("key", "value");         Store data for session only

MATH FUNCTIONS
==============
Math.round(4.7);                                Round to nearest integer
Math.floor(4.7);                                Round down
Math.ceil(4.3);                                 Round up
Math.max(1, 3, 2);                              Find maximum value
Math.min(1, 3, 2);                              Find minimum value
Math.random();                                  Random number between 0 and 1
Math.sqrt(16);                                  Square root
Math.pow(2, 3);                                 Power (2 to the power of 3)

DATE AND TIME
=============
let now = new Date();                           Current date and time
let date = new Date("2023-12-25");              Specific date
date.getFullYear();                             Get year
date.getMonth();                                Get month (0-11)
date.getDate();                                 Get day of month
date.getHours();                                Get hours
date.getMinutes();                              Get minutes
date.getSeconds();                              Get seconds
date.toDateString();                            Convert to readable date string 

REGULAR EXPRESSIONS
===================
let pattern = /hello/i;                         Regular expression pattern
pattern.test(string);                           Test if pattern matches
string.match(pattern);                          Find matches in string
string.replace(/old/g, "new");                  Replace using regex
/pattern/flags;                                 Regex with flags (i=ignore case, g=global) 

COMMENTS
========
// This is a single line comment               Single line comment
/* This is a multi-line comment */             Multi-line comment
/** This is a documentation comment */         Documentation comment (JSDoc)

DEBUGGING
=========
console.log(variable);                         Log variable to console
console.error("Error occurred");               Log error message
console.warn("Warning message");               Log warning message
console.table(array);                          Display array/object as table
debugger;                                      Set breakpoint for debugging